constexpr i32 leading_zero_count_test() {
   struct test_case {
        u32 in;
        u32 expected;
    };

    test_case cases[] = {
        { 0b0, 0 },
        { 0b1, 31 },
        { 0b10, 30 },
        { 0b100, 29 },
        { 0b1000, 28 },
        { 0b10000, 27 },
        { 0b100000, 26 },
        { 0b1000000, 25 },
        { 0b10000000, 24 },
        { 0b100000000, 23 },
        { 0b1000000000, 22 },
        { 0b10000000000, 21 },
        { 0b100000000000, 20 },
        { 0b1000000000000, 19 },
        { 0b10000000000000, 18 },
        { 0b100000000000000, 17 },
        { 0b1000000000000000, 16 },
        { 0b10000000000000000, 15 },
        { 0b100000000000000000, 14 },
        { 0b1000000000000000000, 13 },
        { 0b10000000000000000000, 12 },
        { 0b100000000000000000000, 11 },
        { 0b1000000000000000000000, 10 },
        { 0b10000000000000000000000, 9 },
        { 0b100000000000000000000000, 8 },
        { 0b1000000000000000000000000, 7 },
        { 0b10000000000000000000000000, 6 },
        { 0b100000000000000000000000000, 5 },
        { 0b1000000000000000000000000000, 4 },
        { 0b10000000000000000000000000000, 3 },
        { 0b100000000000000000000000000000, 2 },
        { 0b1000000000000000000000000000000, 1 },
        { 0b10000000000000000000000000000000, 0 },
    };

    executeTestTable("test case failed at index: ", cases, [](auto& c, const char* cErr) {
        Assert(core::leading_zero_count(c.in) == c.expected, cErr);
    });

    return 0;
}

i32 run_intrinsics_tests_suite() {
    RunTest(leading_zero_count_test);

    return 0;
}

constexpr i32 run_compiletime_intrinsics_tests_suite() {
    RunTestCompileTime(leading_zero_count_test);

    return 0;
}
